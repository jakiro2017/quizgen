== css quiz
[Basic CSS]
This is the statement for problem group one.
At ||LINK: https://www.w3schools.com/css/css_intro.asp||

What are true about CSS
||CODE:css:
p {//A 
  color: red;
  text-align: center;
} 
||
*= CSS stands for Cascading Style Sheets
*= CSS describes how HTML elements are to be displayed on screen, paper, or in other media
*= A CSS rule-set consists of a selector and a declaration block like A
*= A CSS comment starts with /* and ends with */. Comments can also span multiple lines.
* A class name can start with a number! :: A class name cannot start with a number!

What are true about CSS
||CODE:html:
//E
<p class="center large">This paragraph refers to two classes.</p> 
//==============
p { //A
  text-align: center;
  color: red;
}
#para1 { //B
  text-align: center;
  color: red;
}
.center { //C
  text-align: center;
  color: red;
}
p.center { //D
  text-align: center;
  color: red;
} 
//F
\* {
  text-align: center;
  color: blue;
}
//G
h1, h2, p {
  text-align: center;
  color: red;
}
||
*= A mean all <p> elements on the page will be center-aligned, with a red text color. 
* A mean all class name p on the page will be center-aligned, with a red text color. 
* B mean all class name para1 on the page will be center-aligned, with a red text color.
*= B mean all id named para1 on the page will be center-aligned, with a red text color.
*= C mean all class name center on the page will be center-aligned, with a red text color.
* D will give an error due to wrong syntax.
*= D mean all elements p with class name center will be center-aligned, with a red text color.
*= E mean the <p> element will be styled according to class="center" and to class="large": 
*= The universal selector (*) selects all HTML elements on the page.
*= G is The grouping selector selects all the HTML elements with the same style definitions.

What are true about CSS
||CODE:html:
<!DOCTYPE html> //A
<html>
<head>
    <link rel="stylesheet" type="text/css" href="mystyle.css">
</head>
<body>
    <h1>This is a heading</h1>
    <p>This is a paragraph.</p>
</body>
</html>
||
||CODE:html:
<!DOCTYPE html>
<html>
<head>
<style>
body {
  background-color: linen;
}
h1 {
  color: maroon;
  margin-left: 40px;
}
</style>
</head>
<body>
<h1>This is a heading</h1>
<p>This is a paragraph.</p>
</body>
</html>
||
||CODE:html:
<!DOCTYPE html> //B
<html>
<body>
<h1 style="color:blue;text-align:center;">This is a heading</h1>
<p style="color:red;">This is a paragraph.</p>
</body>
</html>
||
||CODE:html:
<head> //C
<link rel="stylesheet" type="text/css" href="mystyle.css">
<style>
h1 {
  color: orange;
}
</style>
</head>
||
*= External styles are defined within the <link> element, inside the <head> section of an HTML page like A
*  Must add a space between the property value and the unit ::  Do not add a space between the property value and the unit. The correct way is: margin-left: 20px;
*= An inline style may be used to apply a unique style for a single element like B
* If some properties have been defined for the same selector (element) in different style sheets, the value from the first read style sheet will be used :: If some properties have been defined for the same selector (element) in different style sheets, the value from the last read style sheet will be used.
* In C, h1 color will be red. :: orange, dude

All the styles in a page will "cascade" into a new "virtual" style sheet by the following rules, where number one has the highest priority:
1.Inline style (inside an HTML element)
2.External and internal style sheets (in the head section)
3.Browser default
*= The statement is correct.
* The order should be 2 1 3
* The order should be 3 1 2
* The order should be 2 3 1

What are true about CSS?
||CODE:html:
<h1 style="color:Tomato;">Hello World</h1> //A
<h1 style="border:2px solid Tomato;">Hello World</h1> //B
<h1 style="background-color:DodgerBlue;">Hello World</h1> //C
||
*= You can set color like A, border color like B, and background color like C
*= Each parameter (red, green, and blue) defines the intensity of the color between 0 and 255.
* We cannot define gray color in rgb :: Shades of gray are often defined using equal values for all the 3 light sources
*= We can  use #rrggbb where rr (red), gg (green) and bb (blue) are hexadecimal values between 00 and ff as well
*= In CSS, a color can be specified using hue, saturation, and lightness (HSL)
*= Hue is a degree on the color wheel from 0 to 360. 0 is red, 120 is green, and 240 is blue.
*= Saturation is a percentage value, 0% means a shade of gray, and 100% is the full color.
*= RGBA color values are an extension of RGB color values with an alpha channel - which specifies the opacity for a color.
*= HSLA color values are an extension of HSL color values with an alpha channel - which specifies the opacity for a color.
* HSLA is not supported on most modern browser

What are true about CSS?
||CODE:html:
body { //A
  background-color: lightblue; 
}
//B
body {
  background-image: url("paper.gif");
}
//C
body {
  background-image: url("gradient_bg.png");
}
//D
body {
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
}
//E
body {
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
  background-position: right top;
}
//F
body {
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
  background-position: right top;
  background-attachment: fixed;
}
//G
body {
  background: #ffffff url("img_tree.png") no-repeat right top;
}
//H
p {
  border: 5px solid red;
}
||
*=The background-color property specifies the background color of an element like A
* The background-image property specifies an image to use as the background of an element like B.By default, the image is stretched so it covers the entire element. :: The background-image property specifies an image to use as the background of an element. By default, the image is repeated so it covers the entire element.
*= By default, the background-image property repeats an image both horizontally and vertically. like C
*= If the image  is repeated only horizontally (background-repeat: repeat-x;), the background will look better
*= Showing the background image only once is also specified by the background-repeat property like D
*= The background-position property is used to specify the position of the background image like E
*= The background-attachment property specifies whether the background image should scroll or be fixed (will not scroll with the rest of the page) like F
*= To shorten the code, it is also possible to specify all the background properties in one single property. This is called a shorthand property like G
* The border property is a shorthand property for the following individual border properties:  border-style (required) border-color :: The border property is a shorthand property for the following individual border properties: border-width border-style (required) border-color   
*= H defined a box with red solid border 5px thick

What are true about CSS?
||CODE:html:
div {//A
  padding: 25px 50px 75px 100px;
}
div { //B 
  padding: 25px 50px 75px;
}
div { //C 
  padding: 25px 50px;
}
div { //D
  padding: 25px;
}
//E
p {
  border: 2px solid red;
  border-radius: 5px;
}
||
*= The CSS margin properties are used to create space around elements, outside of any defined borders.
*=The padding property is a shorthand property for the following individual padding properties: padding-top,padding-right,padding-bottom,padding-left
*= A is padding top 25, padding right 50, padding bottom 75, padding left 100
* A is padding top 25, padding left 50, padding right 75, padding left 100
* B is padding top 25, left 50 , right 75
*= B top padding is 25px ,right and left paddings are 50px,bottom padding is 75px 
*= C top and bottom paddings are 25px right and left paddings are 50px
* C top and left padding are 25 and 50
*= D all four paddings are 25px
* D left padding are 25
*= The border-radius property is used to add rounded borders to an element like E

What are true about CSS
||CODE:html:
//A
div {
  width: 300px;
  padding: 25px;
}
//B
div {
  width: 300px;
  padding: 25px;
  box-sizing: border-box;
}
||
*= The CSS padding properties are used to generate space around an element's content, inside of any defined borders.
*= if an element has a specified width, the padding will be ignored. :: if an element has a specified width, the padding added to that element will be added to the total width of the element.
* width of A will be 300 :: 350
*= box-sizing property causes the element to maintain its width; if you increase the padding, the available content space will decrease. like B
* The height and width properties include padding, borders, or margins :: The height and width properties do not include padding, borders, or margins
*= The value of the max-width property overrides width
* when the browser window is smaller than the width of the element (500px). The browser will not display missing content. :: when the browser window is smaller than the width of the element (500px). The browser then adds a horizontal scrollbar to the page.


The height and width properties may have the following values
*=auto - This is default. The browser calculates the height and width
*=length - Defines the height/width in px, cm etc.
*= % - Defines the height/width in percent of the containing block
*= initial - Sets the height/width to its default value
*= inherit - The height/width will be inherited from its parent value
* override set width/height to the value override parent value
* loop : for all child element follow the style


All the padding properties can have the following values:
*= length - specifies a padding in px, pt, cm, etc.
*= % - specifies a padding in % of the width of the containing element
*= inherit - specifies that the padding should be inherited from the parent element
* enforce padding true or false

||IMG:
https://lh3.googleusercontent.com/HMi4iOLxeRUvxKXw6Fm0HWMcYsKEtwex7BQqrUx0IXi0-aXe1dkAAiXHIb_klvM1aLaQ18c0sEg18yGd3fIUCbbGh_n9Q6uLTi5b-hbSCXcvomErawopSr_VFDM7T1e0T78SLnbc-8buD_dfBDil7nblxVnvtWTrG0fEBsjZ_XNmgwuMpHiMFSfnNXreXWNl4lLx3en-JW9NZCRs5B9FyVTWpvF-AQIkVQ6gj2l0Z-1v2ykabf5MEZPwPSO1Zh-ND1fKXCpCs4EAa9wyDd4WNYTWVLwW-1OlusMTfSrhYsb9UnfbtnwyKOzQ8cjCaNKw0wvbExnJ0Yxb7cNZ0MOyDzQyTN5fEPaZu5QftWJ_B1LimNVQft_-nUioUPIHCQFimwIpVVjlB9m9vr0CX2QOOk--vieqJ9LmuDUanUKTirzZ4TySNaw3WeBzWH2X0rFzdZQDqH2ZlYPO24GbiFrJa9nOvUh8i3C_TQztGLjHOYQ68bscyFgMCtym3am7FJ-eZOF2mtQmHnApTG9L51MxZeOacgAW15Ap1LjDCsYeCh6YKzHXH0q8FFSKzxoKlEXhrcNc6n61W5Al-18ZLHRT-R66mdUQiH7g8AivMK1Pk-FG8cbR_jzU1tHAJXEwctareDoCDsh70E8sfzKqYGX7seITSO91MU-jgKMWGfz-u8Ns0TpvFZnzP1I=w1308-h397-no||
*= This is box model CSS
* This is element model
* This is a qml model migrated to css


what are true
||CODE:html:
div { //A
  width: 320px;
  padding: 10px;
  border: 5px solid gray;
  margin: 0;
}
||
* div at A will have max width is 350 (320+10*2+5*2)
*= div at A will have current width is 350 (320+10*2+5*2)
*= Total element width = width + left padding + right padding + left border + right border + left margin + right margin
* Total element width = width + left padding + right padding + left margin + right margin
* Total element width = width + left padding + right padding + left border + right border.

What are true
||CODE:html:
//A
h1 {
  text-decoration: overline;
}
h2 {
  text-decoration: line-through;
}
h3 {
  text-decoration: underline;
}
//B
p.uppercase {
  text-transform: uppercase;
}
p.lowercase {
  text-transform: lowercase;
}
p.capitalize {
  text-transform: capitalize;
}
||
*=An outline is a line that is drawn around elements, OUTSIDE the borders, to make the element "stand out".
*= outline property is a shorthand property for setting the following individual outline properties: outline-width, outline-style (required),outline-color
*=The outline-offset property adds space between an outline and the edge/border of an element. The space between an element and its outline is transparent.
* CSS outline is not valid since it not defined inside an element
*= The text-decoration property is used to set or remove decorations from text. like A
*= The text-transform property is used to specify uppercase and lowercase letters in a text like B
*= The text-indent property is used to specify the indentation of the first line of a text
* The letter-spacing property is used to specify the space between the lines in paragraph. :: The letter-spacing property is used to specify the space between the characters in a text.

What are true about CSS
||CODE:html:
p { //A
  font-family: "Times New Roman", Times, serif;
}
//B
body {
  font-size: 100%;
}
h1 {
  font-size: 2.5em;
}
h2 {
  font-size: 1.875em;
}
p {
  font-size: 0.875em;
}
//C
<!DOCTYPE html>
<html>
<head>
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
</head>
<body>
<i class="fas fa-cloud"></i>
<i class="fas fa-heart"></i>
<i class="fas fa-car"></i>
<i class="fas fa-file"></i>
<i class="fas fa-bars"></i>
</body>
</html>
||
*= Serif fonts have small lines at the ends on some characters. "Sans" means without - these fonts do not have the lines at the ends of characters
*= The font-family property should hold several font names as a "fallback" system. If the browser does not support the first font, it tries the next font, and so on. like A
* The font-style property is mostly used to specify italic and bold text :: The font-style property is mostly used to specify italic text.
* The font-size value can be only absolute. :: The font-size value can be an absolute, or relative size. Relative sets the size relative to surrounding elements Allows a user to change the text size in browsers
* 1em is 4px (group pixel) :: 1em is equal to the current font size. The default text size in browsers is 16px. So, the default size of 1em is 16px.
*= The solution that works in all browsers, is to set a default font-size in percent for the <body> element like B
* vw stands for very wide, which this font will be cover full width of browser. :: vw unit, which means the "viewport width".That way the text size will follow the size of the browser window.Viewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.
*= The font-variant property specifies whether or not a text should be displayed in a small-caps font.
* In a small-caps font appears in a smaller font size than the original uppercase letters in the text. :: In a small-caps font, all lowercase letters are converted to uppercase letters. However, the converted uppercase letters appears in a smaller font size than the original uppercase letters in the text.
* To add icon must manual add image.
*= To add icon you can use fontawesome or bootstrap, google icon like C.

What are true about CSS
*=The four links states are: a:link ,a:visited ,a:hover ,a:active.
*=a:link - a normal, unvisited link
*= a:visited - a link the user has visited
*= a:hover - a link when the user mouses over it
*= a:active - a link contain on focus element :: a link the moment it is clicked
*= a:hover MUST come after a:link and a:visited
* a:active MUST come before a:hover :: a:active MUST come after a:hover

||CODE:html:
a:link, a:visited {
  background-color: #f44336;
  color: white;
  padding: 14px 25px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
}
a:hover, a:active {
  background-color: red;
}
//B
ul.a {
  list-style-type: circle;
}
ul.b {
  list-style-type: square;
}
ol.c {
  list-style-type: upper-roman;
}
ol.d {
  list-style-type: lower-alpha;
}
//C
ul {
  list-style-image: url('sqpurple.gif');
}
||
*= The background color and  the padding make the button like
* We need html code to define a as a button
*= there are two main types of lists: unordered lists (<ul>) ,ordered lists (<ol>)
*= unordered lists (<ul>) - the list items are marked with bullets
*= ordered lists (<ol>) - the list items are marked with numbers or letters
*= The list-style-type property specifies the type of list item marker like B
*= The list-style-image property specifies an image as the list item marker like C
*= "list-style-position: outside;" means that the bullet points will be outside the list item.
* The marker/bullet can't be removed :: The list-style-type:none property can also be used to remove the markers/bullets. Note that the list also has default margin and padding. To remove this, add margin:0 and padding:0 to <ul> or <ol>

What are true
When using the shorthand property, the order of the property values are:
||CODE:java:
//A
1.list-style-type (if a list-style-image is specified, the value of this property will be displayed if the image for some reason cannot be displayed)
2.list-style-position (specifies whether the list-item markers should appear inside or outside the content flow)
3.list-style-image (specifies an image as the list item marker)
||
||CODE:css:
//B
#customers tr:nth-child(even){background-color: #f2f2f2;}
//C
#customers th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  background-color: #4CAF50;
  color: white;
}
//D
table, th, td {
  border: 1px solid black;
}
//E
table {
  border-collapse: collapse;
}
//F
th, td {
  border-bottom: 1px solid #ddd;
}
||
*=list-style property is a shorthand property. It is used to set all the list properties in one declaration
* statement A order is wrong. should be 2 3 1 :: A is true
*= B is used to highlight even row
* C is class customers to highlight :: id not class
*= To specify table borders in CSS, use the border property like D
* E is to add property collapse all data for table :: The border-collapse property sets whether the table borders should be collapsed into a single border
*= To control the space between the border and the content in a table, use the padding property on <td> and <th> elements
*= Add the border-bottom property to <th> and <td> for horizontal dividers like F

What are true
*= Every HTML element has a default display value depending on what type of element it is. The default display value for most elements is block or inline.
*= An inline element does not start on a new line and only takes up as much width as necessary.
*= A block-level element always starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).
* span is a block element :: span, img, a  is inline element
*= display: none;  is used to hide element
* you  can't override the default element display value
* visibility:hidden; is the same as display:none :: visibility:hidden; also hides an element. However, the element will still take up the same space as before
*= Setting the width of a block-level element will prevent it from stretching out to the edges of its container.
* When use max width, when the browser window is smaller than the width of the element. The browser then adds a horizontal scrollbar to the page. :: with width not max width